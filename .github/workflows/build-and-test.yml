name: CI Tests

on:
  - push
  - pull_request

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
        compiler:
          - gcc
          - clang
        dqlite-next:
          - yes
          - no
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up dependencies
      run: |
          sudo apt update
          sudo apt install -y libsqlite3-dev liblz4-dev libuv1-dev \
                              linux-libc-dev btrfs-progs xfsprogs zfsutils-linux \
                              lcov

    - name: Build dqlite
      env:
        CC: ${{ matrix.compiler }}
      run: |
          autoreconf -i
          ./configure --enable-debug --enable-code-coverage --enable-sanitize \
                      --enable-build-raft --enable-dqlite-next=${{ matrix.dqlite-next }}
          make -j4 unit-test integration-test \
                   raft-core-fuzzy-test \
                   raft-core-integration-test \
                   raft-core-unit-test \
                   raft-uv-integration-test \
                   raft-uv-unit-test

    - name: Test
      env:
        CC: ${{ matrix.compiler }}
        LIBDQLITE_TRACE: 1
      run: |
           ./test/raft/lib/fs.sh setup
           export $(test/raft/lib/fs.sh detect)
           ./unit-test --show-stderr
           ./integration-test
           ./raft-core-fuzzy-test
           ./raft-core-integration-test
           ./raft-core-unit-test
           ./raft-uv-integration-test
           ./raft-uv-unit-test
           ./test/raft/lib/fs.sh teardown

    - name: Coverage
      env:
        CC: ${{ matrix.compiler }}
      if: ${{ matrix.compiler == 'gcc' }}
      run: |
        make code-coverage-capture

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        verbose: true

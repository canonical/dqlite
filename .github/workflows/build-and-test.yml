name: CI Tests

on:
  - push
  - pull_request

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
        compiler:
          - gcc
          - clang
        tracing:
          - LIBDQLITE_TRACE=1
          - NOLIBDQLITE_TRACE=1
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup dependencies
      run: |
          sudo apt update
          sudo apt install -y lcov liblz4-dev libuv1-dev wget unzip

    - name: Build raft
      env:
        CC: ${{ matrix.compiler }}
      run: |
          git clone https://github.com/canonical/raft.git
          cd raft
          git checkout v0.14.0
          autoreconf -i
          ./configure --enable-debug --enable-sanitize
          make -j4
          sudo make install
          sudo ldconfig
          cd ..

    - name: Build dqlite
      env:
        CC: ${{ matrix.compiler }}
      run: |
          wget https://sqlite.org/2020/sqlite-amalgamation-3330000.zip
          unzip sqlite-amalgamation-3330000.zip
          cp sqlite-amalgamation-3330000/sqlite3.{c,h} .
          autoreconf -i
          ./configure --enable-debug --enable-code-coverage --enable-sanitize --enable-build-sqlite
          make CFLAGS=-O0 -j2

    - name: Test
      env:
        CC: ${{ matrix.compiler }}
      run: |
           export ${{ matrix.tracing }}
           make CFLAGS=-O0 -j2 check || (cat ./test-suite.log && false)

    - name: Coverage
      env:
        CC: ${{ matrix.compiler }}
      run: if [ "${CC}" = "gcc" ]; then make code-coverage-capture; fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        verbose: true

name: Build PPA source packages
on:
  release:
    types: [published]
    branches:
      - 'lts-1.17.x'
jobs:
  build:
    if: github.repository == 'canonical/dqlite'
    strategy:
      fail-fast: false
      matrix:
        target:
          - focal
          - jammy
          - noble
          - plucky
    runs-on: ubuntu-22.04
    container:
      image: ubuntu:20.04
    environment:
      name: ppa
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - uses: actions/checkout@v4
      with:
        repository: canonical/dqlite-ppa
        ref: dqlite-lts
        path: dqlite-ppa

    - name: Setup dependencies
      run: |
          sudo apt-get update -qq
          sudo apt-get install -qq debhelper devscripts gnupg

      # Note for future maintainers: the secret key should be stored
      # in the GHA secret in ASCII-armored form, and must not be
      # password-protected.
    - name: Setup GPG signing key
      env:
          PPA_SECRET_KEY: ${{ secrets.PPA_SECRET_KEY }}
      run: |
          echo "$PPA_SECRET_KEY" > private-key.asc
          gpg --import --batch private-key.asc

    - name: Delete GPG signing key file
      if: always()
      run: |
          rm -f private-key.asc

    - name: Build source package
      env:
        DEBFULLNAME: "Github Actions"
        DEBEMAIL: "dqlitebot@lists.canonical.com"
        TARGET: ${{ matrix.target }}
      run: |
          cp -R dqlite-ppa/debian .
          VERSION="$(git describe --tags | sed -e "s/^v//" -e "s/-/+git/")"
          dch --create \
            --distribution ${TARGET} \
            --package dqlite1.17 \
            --newversion ${VERSION}~${TARGET}1 \
            "Automatic build from Github"
          debuild -S -sa -d -k${{ vars.PPA_PUBLIC_KEY }}

    - name: Upload to Launchpad
      run: |
          cd ..
          shopt -s globstar
          dput -U -u ppa:dqlite/dev **/*.changes
